let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_628‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_628‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_628‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_628‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_628‍.w("./api",[["default",["api"],function(v){api=v}]]);_628‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config();






const { PORT, MONGO_URI } = process.env;




const app = new Koa();
const router = new Router();


router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);
app.use(router.routes()).use(router.allowedMethods());

mongoose
    .connect(MONGO_URI, { useNewUrlParser: true, useFindAndModify: false })
    .then(() => {
        console.log('Conneted to MongoDB');
    })
    .catch((e) => {
        _628‍.g.console.log(e);
    })

const port = PORT || 4000;
app.listen(port, () => {
    _628‍.g.console.log(port + '포트를 이용중입니다.');
})